/* 8. упюмхлше опнжедспш / рпхццепш;*/

-- опнжедспю, йнрнпюъ декюер онданпйс пейнлемдселшу тхкэлнб

DROP PROCEDURE IF EXISTS SP_MEDIA_OFFERS();
DELIMITER //
CREATE PROCEDURE SP_MEDIA_OFFERS(FOR_USER_ID BIGINT)
BEGIN
	SELECT MG2.MEDIA_ID -- онданпйю тхкэлнб он фюмпс, йнрнпши онкэгнбюрекэ сфе опнялюрпхбюк
	FROM MEDIA M 
	JOIN MEDIA_GENRES MG1
	JOIN MEDIA_GENRES MG2 
	JOIN WATCHED_MEDIA WM 
	ON M.ID = MG1.MEDIA_ID AND M.ID = WM.MEDIA_ID AND MG1.GENRES_ID = MG2.GENRES_ID 
	WHERE WM.USER_ID = FOR_USER_ID AND WM.MEDIA_ID <> MG2.MEDIA_ID ;
END //
DELIMITER ;
CALL SP_MEDIA_OFFERS('15')

/*рпхццеп, йнрнпши оняке гюохях б рюакхжс "опнялнрпеммше ледхю", опнбепъер, еярэ кх ярпнвйю я гюохяэч я рюйхл фе
USER_ID х MEDIA_ID б рюакхжюу IVI.WATCH_LATER, IVI.USERS_PURCHASED_FILMS, RENTED_MEDIA. еякх опнбепйю бшонкмъеряъ,
ярюбхряъ ткюфнй IS_VIEWED = 1.*/

DROP TRIGGER IF EXISTS TR_WATCHED_MEDIA;
DELIMITER //
CREATE TRIGGER TR_WATCHED_MEDIA AFTER INSERT ON WATCHED_MEDIA
FOR EACH ROW
BEGIN
	IF EXISTS (SELECT * FROM WATCH_LATER WHERE USER_ID = NEW.USER_ID AND MEDIA_ID = NEW.MEDIA_ID) THEN 
		UPDATE WATCH_LATER SET IS_VIEWED = 1 WHERE USER_ID = NEW.USER_ID AND MEDIA_ID = NEW.MEDIA_ID;
	END IF;
	IF EXISTS (SELECT * FROM USERS_PURCHASED_FILMS WHERE USER_ID = NEW.USER_ID AND MEDIA_ID = NEW.MEDIA_ID) THEN 
		UPDATE USERS_PURCHASED_FILMS SET IS_VIEWED = 1 WHERE USER_ID = NEW.USER_ID AND MEDIA_ID = NEW.MEDIA_ID;
	END IF;
	IF EXISTS (SELECT * FROM RENTED_MEDIA WHERE USER_ID = NEW.USER_ID AND MEDIA_ID = NEW.MEDIA_ID) THEN 
		UPDATE RENTED_MEDIA SET IS_VIEWED = 1 WHERE USER_ID = NEW.USER_ID AND MEDIA_ID = NEW.MEDIA_ID;
	END IF;
END//

DELIMITER ;
-- дкъ опнбепйх
INSERT INTO WATCHED_MEDIA (USER_ID, MEDIA_ID) VALUES
('1', '4');
SELECT * FROM WATCH_LATER;
INSERT INTO WATCHED_MEDIA (USER_ID, MEDIA_ID) VALUES
('1', '16');
SELECT * FROM USERS_PURCHASED_FILMS;
INSERT INTO WATCHED_MEDIA (USER_ID, MEDIA_ID) VALUES
('1', '7');
SELECT * FROM USERS_PURCHASED_FILMS;
SELECT * FROM WATCH_LATER;
SELECT * FROM RENTED_MEDIA;
SELECT * FROM WATCHED_MEDIA;