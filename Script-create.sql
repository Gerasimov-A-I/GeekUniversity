/* Тема курсового проекта: "Описание модели хранения данных сайта ivi.ru" (Онлайн-кинотеатр ivi.ru)"".
 * Российская медиакомпания, работающая на рынке легального профессионального онлайн-видео. 
 * Среди проектов компании популярный в России частично бесплатный онлайн-кинотеатр ivi.ru 
 * и первый в России детский видеосервис deti.ivi.ru.
 * Часть контента всех проектов доступна для просмотра бесплатно и без регистрации, однако контент урезан.
 * Данный сервис предоставляет просмотр контента(фильмов, сериалов, мультфильмов...) по подписке для монетизации своих услуг.
 * При оформленной подписке, пользователи могут просматривать контент "по подписке" (стоимость от 99 руб. до 399 руб.) 
 * - включена большая часть фильмов, сериалов, мультиков, телеканалов общественного телевидения; 
 * Также пользователи могут оформить "покупку", либо "аренду" - тот контент, 
 * который не включен в "подписку" (стоимость от 1 руб. до 799 руб.).
 * Стоимость "аренды" и "покупки" контента также зависит от качества предоставляемого контента.*/

DROP DATABASE IF EXISTS IVI;
CREATE DATABASE IVI;
USE IVI;

ALTER DATABASE `IVI`
DEFAULT CHARACTER SET UTF8
DEFAULT COLLATE UTF8_UNICODE_CI;

DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS (
	ID SERIAL, 
    FIRSTNAME VARCHAR(50) DEFAULT NULL,
    LASTNAME VARCHAR(50) DEFAULT NULL,
    EMAIL VARCHAR(120) DEFAULT NULL,
	PHONE BIGINT UNSIGNED UNIQUE NOT NULL,
	IS_SUBSCRIBED BIT(1) DEFAULT 0
) COMMENT 'ПОЛЬЗОВАТЕЛИ';

DROP TABLE IF EXISTS SUBSCRIPTION_PRICE;
CREATE TABLE SUBSCRIPTION_PRICE (
	ID SERIAL,
    PRICE DECIMAL (11,2) NOT NULL COMMENT 'ЦЕНА ЗА ПОДПИСКУ НА УКАЗАННЫЙ ПЕРИОД',
    PERIOD TINYINT UNSIGNED NOT NULL COMMENT 'ПЕРИОД ПОДПИСКИ В МЕСЯЦАХ'
    
) COMMENT 'ВАРИАНТЫ ЦЕН НА ПОДПИСКУ';

DROP TABLE IF EXISTS SUBSCRIPTIONS;
CREATE TABLE SUBSCRIPTIONS ( 
	USER_ID BIGINT UNSIGNED NOT NULL UNIQUE,
    SUBS_PRICE_ID BIGINT UNSIGNED NOT NULL ,
    CREATED_AT DATETIME DEFAULT NOW() COMMENT 'ДАТА ОФОРМЛЕНИЯ ПОДПИСКИ',
    EXTENSION BIT(1) COMMENT 'ПРОДЛЕНИЕ ПОДПИСКИ (ДА, НЕТ)',
    
    PRIMARY KEY (USER_ID, SUBS_PRICE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY (SUBS_PRICE_ID) REFERENCES SUBSCRIPTION_PRICE(ID)
) COMMENT 'ОФОРМЛЕННЫЕ ПОДПИСКИ ПОЛЬЗОВАТЕЛЕЙ';

DROP TABLE IF EXISTS ORIGIN_COUNTRIES;
CREATE TABLE ORIGIN_COUNTRIES (
	ID SERIAL, 
	NAME VARCHAR(255) NOT NULL

) COMMENT 'СТРАНЫ';

DROP TABLE IF EXISTS GENRES;
CREATE TABLE GENRES (
	ID SERIAL, 
	NAME VARCHAR(255) NOT NULL

) COMMENT 'ЖАНРЫ';

DROP TABLE IF EXISTS MEDIA;
CREATE TABLE MEDIA (
	ID SERIAL,
	NAME VARCHAR(255),
	IS_SERIAL BIT(1) DEFAULT 0,
	IS_CARTOON BIT(1) DEFAULT 0,
	FILENAME VARCHAR (255) DEFAULT NULL COMMENT 'ПУТЬ К ФАЙЛУ, КОТОРЫЙ ХРАНИТСЯ НА ОТДЕЛЬНОМ ДИСКЕ(СЕРВЕРЕ)',
	DURATION INT DEFAULT NULL COMMENT 'ПРОДОЛЖИТЕЛЬНОСТЬ ФИЛЬМА В МИНУТАХ',
	METADATA JSON COMMENT 'ИНФОРМАЦИЯ О ФАЙЛЕ, РАЗМЕР, РАСШИРЕНИЕ, ДАТА СОЗДАНИЯ, КОДЕКИ..', 
	RELEASE_YEAR YEAR NOT NULL COMMENT 'ГОД ВЫПУСКА ФИЛЬМА В ПРОКАТ',
	DESCRIPTION TEXT,
	AGE_CATEGORY TINYINT NOT NULL COMMENT 'ВОЗРАСТНАЯ КАТЕГОРИЯ ФИЛЬМОВ ОТ УКАЗАННОГО КОЛИЧЕСТВА ЛЕТ',
	
	INDEX (NAME)
) COMMENT 'МЕДИА КОНТЕНТ';

DROP TABLE IF EXISTS SERIES;
CREATE TABLE SERIES (
	ID SERIAL,
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	SEASON INT DEFAULT NULL COMMENT 'НОМЕР СЕЗОНА',
	SERIES INT DEFAULT NULL COMMENT 'НОМЕР СЕРИИ',
	NAME VARCHAR(255) DEFAULT NULL COMMENT 'НАЗВАНИЕ СЕРИИ',
	DESCRIPTION TEXT,
	DURATION INT DEFAULT NULL COMMENT 'ПРОДОЛЖИТЕЛЬНОСТЬ СЕРИИ В МИНУТАХ',
	RELEASE_YEAR YEAR NOT NULL COMMENT 'ГОД ВЫПУСКА СЕРИИ В ПРОКАТ',
	FILENAME VARCHAR (255) NOT NULL COMMENT 'ПУТЬ К ФАЙЛУ, КОТОРЫЙ ХРАНИТСЯ НА ОТДЕЛЬНОМ ДИСКЕ(СЕРВЕРЕ)', 
	METADATA JSON COMMENT 'ИНФОРМАЦИЯ О ФАЙЛЕ, РАЗМЕР, РАСШИРЕНИЕ, ДАТА СОЗДАНИЯ, КОДЕКИ..', 
	
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'СЕРИИ К СЕРИАЛАМ';

DROP TABLE IF EXISTS TRAILERS;
CREATE TABLE TRAILERS (
	ID SERIAL,
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	NAME VARCHAR(255),
	FILENAME VARCHAR (255) NOT NULL COMMENT 'ПУТЬ К ФАЙЛУ, КОТОРЫЙ ХРАНИТСЯ НА ОТДЕЛЬНОМ ДИСКЕ(СЕРВЕРЕ)', 
	METADATA JSON COMMENT 'ИНФОРМАЦИЯ О ФАЙЛЕ, РАЗМЕР, РАСШИРЕНИЕ, ДАТА СОЗДАНИЯ, КОДЕКИ..', 
	
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'ТРЕЙЛЕРЫ К ФИЛЬМАМ';

DROP TABLE IF EXISTS MEDIA_GENRES;
CREATE TABLE MEDIA_GENRES (
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	GENRES_ID BIGINT UNSIGNED NOT NULL, 
	
	PRIMARY KEY (MEDIA_ID, GENRES_ID),
	FOREIGN KEY (GENRES_ID) REFERENCES GENRES(ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'ЖАНРЫ МЕДИА';

DROP TABLE IF EXISTS MEDIA_COUNTRIES;
CREATE TABLE MEDIA_COUNTRIES (
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	COUNTRIES_ID BIGINT UNSIGNED NOT NULL, 
	
	PRIMARY KEY (COUNTRIES_ID, MEDIA_ID),
	FOREIGN KEY (COUNTRIES_ID) REFERENCES ORIGIN_COUNTRIES(ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'СТРАНЫ ПРОИЗВОДСТВА МЕДИА';

DROP TABLE IF EXISTS CATEGORY_MEDIA_AVAILABILITY;
CREATE TABLE CATEGORY_MEDIA_AVAILABILITY (
	ID SERIAL, 
	CATEGORY VARCHAR(255)
) COMMENT 'КАТЕГОРИИ ДОСТУПА МЕДИА';

DROP TABLE IF EXISTS MEDIA_CATEGORY;
CREATE TABLE MEDIA_CATEGORY (
	MEDIA_ID BIGINT UNSIGNED NOT NULL, 
	CATEGORY_ID BIGINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY_MEDIA_AVAILABILITY(ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'КАТЕГОРИИ К МЕДИА';

DROP TABLE IF EXISTS PRICE_CATEGORY;
CREATE TABLE PRICE_CATEGORY (
	ID SERIAL, 
	PURCHASE_SD DECIMAL (11,2) DEFAULT NULL COMMENT 'ЦЕНА ЗА ПОКУПКУ В КАЧЕСТВЕ SD',
	PURCHASE_FULL_HD DECIMAL (11,2) DEFAULT NULL COMMENT 'ЦЕНА ЗА ПОКУПКУ В КАЧЕСТВЕ FULL_HD',
	PURCHASE_4K DECIMAL (11,2) DEFAULT NULL COMMENT 'ЦЕНА ЗА ПОКУПКУ В КАЧЕСТВЕ 4K',
	RENT_SD DECIMAL (11,2) DEFAULT NULL COMMENT 'ЦЕНА ЗА АРЕНДУ В КАЧЕСТВЕ SD',
	RENT_FULL_HD DECIMAL (11,2) DEFAULT NULL COMMENT 'ЦЕНА ЗА АРЕНДУ В КАЧЕСТВЕ FULL_HD'
) COMMENT 'КАТЕГОРИИ ЦЕН';

DROP TABLE IF EXISTS MEDIA_PRICE;
CREATE TABLE MEDIA_PRICE (
	MEDIA_ID BIGINT UNSIGNED NOT NULL, 
	PRICE_ID BIGINT UNSIGNED NOT NULL,
	
	FOREIGN KEY (PRICE_ID) REFERENCES PRICE_CATEGORY(ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'ЦЕНЫ НА МЕДИА В АРЕНДУ ИЛИ ЗА ПОКУПКУ';

DROP TABLE IF EXISTS COMMENTS;
CREATE TABLE COMMENTS (
	ID SERIAL, 
	USER_ID BIGINT UNSIGNED NOT NULL,
    MEDIA_ID BIGINT UNSIGNED NOT NULL,
    BODY TEXT,
    CREATED_AT DATETIME DEFAULT NOW(), 
        
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'КОММЕНТАРИИ ПОЛЬЗОВАТЕЛЕЙ';

DROP TABLE IF EXISTS CATEGORY_FILMMAKERS;
CREATE TABLE CATEGORY_FILMMAKERS (
	ID SERIAL,
	CATEGORY VARCHAR(255) NOT NULL,
	
	INDEX CATEGORY_FILMMAKERS(CATEGORY)
) COMMENT 'КАТЕГОРИИ СОЗДАТЕЛЕЙ ФИЛЬМОВ';

DROP TABLE IF EXISTS NAME_FILMMAKERS;
CREATE TABLE NAME_FILMMAKERS (
	ID SERIAL,
	NAME VARCHAR(255) NOT NULL,
	FILENAME VARCHAR (255) NOT NULL,
	
    INDEX NAME_FILMAKERS(NAME)
) COMMENT 'ФАМИЛИИ СОЗДАТЕЛЕЙ КОНТЕНТА';

DROP TABLE IF EXISTS FILMMAKERS_INFO;
CREATE TABLE FILMMAKERS_INFO (
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	CATEGORY_FILMMAKERS_ID BIGINT UNSIGNED NOT NULL,
	NAME_FILMMAKERS_ID BIGINT UNSIGNED NOT NULL,
	
	PRIMARY KEY (MEDIA_ID, CATEGORY_FILMMAKERS_ID, NAME_FILMMAKERS_ID),
    FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID),
    FOREIGN KEY (CATEGORY_FILMMAKERS_ID) REFERENCES CATEGORY_FILMMAKERS(ID),
    FOREIGN KEY (NAME_FILMMAKERS_ID) REFERENCES NAME_FILMMAKERS(ID)
) COMMENT 'СОСТАВ УЧАСТНИКОВ ФИЛЬМОВ';


DROP TABLE IF EXISTS USERS_PURCHASED_FILMS;
CREATE TABLE USERS_PURCHASED_FILMS (
	USER_ID BIGINT UNSIGNED NOT NULL,
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	IS_VIEWED BIT(1) DEFAULT 0,
	
	PRIMARY KEY (USER_ID, MEDIA_ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
) COMMENT 'КУПЛЕННЫЕ ФИЛЬМЫ ПОЛЬЗОВАТЕЛЕЙ';

DROP TABLE IF EXISTS MEDIA_RATING;
CREATE TABLE MEDIA_RATING (
	ID SERIAL,
	USER_ID BIGINT UNSIGNED NOT NULL,
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	DIRECTING TINYINT UNSIGNED DEFAULT NULL COMMENT 'ОЦЕНКА РЕЖИССУРЫ',
	STORY TINYINT UNSIGNED DEFAULT NULL COMMENT 'СЮЖЕТ',
	ENTERTAINMENT TINYINT UNSIGNED DEFAULT NULL COMMENT 'ЗРЕЛИЩНОСТЬ',
	ACTORS TINYINT UNSIGNED DEFAULT NULL COMMENT 'АКТЕРЫ',
	
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
) COMMENT 'РЕЙТИНГ МЕДИА';

DROP TABLE IF EXISTS WATCH_LATER;
CREATE TABLE WATCH_LATER (
	USER_ID BIGINT UNSIGNED NOT NULL,
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	IS_VIEWED BIT DEFAULT 0 COMMENT 'ПРОСМОТРЕН ЛИ ФИЛЬМ (ДА/НЕТ)',
	
	PRIMARY KEY (USER_ID, MEDIA_ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
) COMMENT 'СМОТРЕТЬ ПОЗЖЕ';

DROP TABLE IF EXISTS WATCHED_MEDIA;
CREATE TABLE WATCHED_MEDIA (
	USER_ID BIGINT UNSIGNED NOT NULL,
	MEDIA_ID BIGINT UNSIGNED NOT NULL,
	START_WATCH_DATE DATETIME DEFAULT NOW(),
	
	PRIMARY KEY (USER_ID, MEDIA_ID),
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID),
	FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
) COMMENT 'ПРОСМОТРЕННЫЕ ФИЛЬМЫ';

DROP TABLE IF EXISTS RENTED_MEDIA;
CREATE TABLE RENTED_MEDIA (
	USER_ID BIGINT UNSIGNED NOT NULL,
    MEDIA_ID BIGINT UNSIGNED NOT NULL,
    RENT_START DATETIME DEFAULT NOW() COMMENT 'ДАТА НАЧАЛА АРЕНДЫ',
    RENT_END DATETIME AS (ADDDATE(RENT_START, INTERVAL 2 DAY)) STORED COMMENT 'ДАТА ОКОНЧАНИЯ АРЕНДЫ (АРЕНДА ДАЕТСЯ НА 2 ДНЯ)',
	IS_VIEWED BIT DEFAULT 0 COMMENT 'ПРОСМОТРЕН ЛИ ФИЛЬМ (ДА/НЕТ)',
    
	PRIMARY KEY (USER_ID, MEDIA_ID, RENT_START),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA(ID)
) COMMENT 'ФИЛЬМЫ, ВЗЯТЫЕ В АРЕНДУ';




